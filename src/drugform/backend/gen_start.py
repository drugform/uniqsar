import requests
import os
import json
import time

backend_address = os.environ['DF_BACKEND_ADDRESS']

encode_url = os.path.join(backend_address, 'encode_mol')
calc_url = os.path.join(backend_address, 'calc')
gen_url = os.path.join(backend_address, 'generate')
gen_fetch_url = os.path.join(backend_address, 'generate_fetch')
list_services_url = os.path.join(backend_address, 'list_services')

def gen_start (gen_params, task):
    r = requests.post(gen_url, json={"task" : task,
                                     "generator" : gen_params})
    try:
        print(json.dumps(json.loads(r.text), indent=2))
    except:
        print(r.text)

        
if __name__ == "__main__":

    pentobarbital = "CCCC(C)C1(C(=O)NC(=O)NC1=O)CC"
    doxorubicin = "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3=C2C(=C4C(=C3O)C(=O)C5=C(C4=O)C(=CC=C5)OC)O)(C(=O)CO)O)N)O"
    trimeprazine = "CC(CN1C2=CC=CC=C2SC3=CC=CC=C31)CN(C)C"
    
    
    DRD2 = "MDPLNLSWYDDDLERQNWSRPFNGSDGKADRPHYNYYATLLTLLIAVIVFGNVLVCMAVSREKALQTTTNYLIVSLAVADLLVATLVMPWVVYLEVVGEWKFSRIHCDIFVTLDVMMCTASILNLCAISIDRYTAVAMPMLYNTRYSSKRRVTVMISIVWVLSFTISCPLLFGLNNADQNECIIANPAFVVYSSIVSFYVPFIVTLLVYIKIYIVLRRRRKRVNTKRSSRAFRAHLRAPLKGNCTHPEDMKLCTVIMKSNGSFPVNRRRVEAARRAQELEMEMLSSTSPPERTRYSPIPPSHHQLTLPDPSHHGLHSTPDSPAKPEKNGHAKDHPKIAKIFEIQTMPNGKTRTSLKTMSRRKLSQQKEKKATQMLAIVLGVFIICWLPFFITHILNIHCDCNIPPVLYSAFTWLGYVNSAVNPIIYTTFNIEFRKAFLKILHC"

    DYR1A = "MHTGGETSACKPSSVRLAPSFSFHAAGLQMAGQMPHSHQYSDRRQPNISDQQVSALSYSDQIQQPLTNQVMPDIVMLQRRMPQTFRDPATAPLRKLSVDLIKTYKHINEVYYAKKKRRHQQGQGDDSSHKKERKVYNDGYDDDNYDYIVKNGEKWMDRYEIDSLIGKGSFGQVVKAYDRVEQEWVAIKIIKNKKAFLNQAQIEVRLLELMNKHDTEMKYYIVHLKRHFMFRNHLCLVFEMLSYNLYDLLRNTNFRGVSLNLTRKFAQQMCTALLFLATPELSIIHCDLKPENILLCNPKRSAIKIVDFGSSCQLGQRIYQYIQSRFYRSPEVLLGMPYDLAIDMWSLGCILVEMHTGEPLFSGANEVDQMNKIVEVLGIPPAHILDQAPKARKFFEKLPDGTWNLKKTKDGKREYKPPGTRKLHNILGVETGGPGGRRAGESGHTVADYLKFKDLILRMLDYDPKTRIQPYYALQHSFFKKTADEGTNTSNSVSTSPAMEQSQSSGTTSSTSSSSGGSSGTSNSGRARSDPTHQHRHSGGHFTAAVQAMDCETHSPQVRQQFPAPLGWSGTEAPTQVTVETHPVQETTFHVAPQQNALHHHHGNSSHHHHHHHHHHHHHGQQALGNRTRPRVYNSPTNSSSTQDSMEVGHSHHSMTSLSSSTTSSSTSSSSTGNQGNQAYQNRPVAANTLDFGQNGAMDVNLTVYSNPRQETGIAGHPTYQFSANTGPAHYMTEGHLTMRQGADREESPMTGVCVQQSPVASS"

    melatonin = "COc1ccc2[nH]cc(CCNC(C)=O)c2c1"
    agomelatine = "COc1ccc2cccc(CCNC(C)=O)c2c1"
    
    MTNR1A = "MQGNGSALPNASQPVLRGDGARPSWLASALACVLIFTIVVDILGNLLVILSVYRNKKLRNAGNIFVVSLAVADLVVAIYPYPLVLMSIFNNGWNLGYLHCQVSGFLMGLSVIGSIFNITGIAINRYCYICHSLKYDKLYSSKNSLCYVLLIWLLTLAAVLPNLRAGTLQYDPRIYSCTFAQSVSSAYTIAVVVFHFLVPMIIVIFCYLRIWILVLQVRQRVKPDRKPKLKPQDFRNFVTMFVVFVLFAICWAPLNFIGLAVASDPASMVPRIPEWLFVASYYMAYFNSCLNAIIYGLLNQNFRKEYRRIIVSLCTARVFFVDSSNDVADRVKWKPSPLMTNNNVVKVDSV"

    MTNR1B = "MSENGSFANCCEAGGWAVRPGWSGAGSARPSRTPRPPWVAPALSAVLIVTTAVDVVGNLLVILSVLRNRKLRNAGNLFLVSLALADLVVAFYPYPLILVAIFYDGWALGEEHCKASAFVMGLSVIGSVFNITAIAINRYCYICHSMAYHRIYRRWHTPLHICLIWLLTVVALLPNFFVGSLEYDPRIYSCTFIQTASTQYTAAVVVIHFLLPIAVVSFCYLRIWVLVLQARRKAKPESRLCLKPSDLRSFLTMFVVFVIFAICWAPLNCIGLAVAINPQEMAPQIPEGLFVTSYLLAYFNSCLNAIVYGLLNQNFRREYKRILLALWNPRHCIQDASKGSHAEGLQSPAPPIIGVQHQADAL"

    HTR2C = "MVNLRNAVHSFLVHLIGLLVWQSDISVSPVAAIVTDIFNTSDGGRFKFPDGVQNWPALSIVIIIIMTIGGNILVIMAVSMEKKLHNATNYFLMSLAIADMLVGLLVMPLSLLAILYDYVWPLPRYLCPVWISLDVLFSTASIMHLCAISLDRYVAIRNPIEHSRFNSRTKAIMKIAIVWAISIGVSVPIPVIGLRDEEKVFVNNTTCVLNDPNFVLIGSFVAFFIPLTIMVITYCLTIYVLRRQALMLLHGHTEEPPGLSLDFLKCCKRNTAEEENSANPNQDQNARRRKKKERRPRGTMQAINNERKASKVLGIVFFVFLIMWCPFFITNILSVLCEKSCNQKLMEKLLNVFVWIGYVCSGINPLVYTLFNKIYRRAFSNYLRCNYKVEKKPPVRQIPRVAATALSGRELNVNIYRHTNEPVIEKASDNEPGIEMQVENLELPVNPSSVVSERISSV"

    
    task = [
        {'prop' : 'pKi',
         'model' : 'bindingdb_v2',
         'params' : {'weight' : 1,
                     'aim' : 'maximize',
                     'protein' : OR1}},
        {'prop' : 'pKi',
         'model' : 'bindingdb_fair_light',
         'params' : {'weight' : 1,
                     'aim' : 'minimize',
                     'protein' : OR2}},
        {'prop' : 'pIC50',
         'model' : 'bindingdb_v2',
         'params' : {'weight' : 1,
                     'aim' : 'maximize',
                     'protein' : OR1}},
        {'prop' : 'pIC50',
         'model' : 'bindingdb_fair_light',
         'params' : {'weight' : 1,
                     'aim' : 'minimize',
                     'protein' : OR2}},
         
        #{'prop' : 'druglike',
        # 'model' : 'fastprops',
        # 'params' : {'weight' : 0.5,
        #             'aim' : 'maximize'}}]#,
        #{'prop' : 'o_mus_orl_ld',
        # 'model' : 'toxicity',
        # 'params' : {'weight' : 1,
        #             'aim' : 'maximize'}}]

    gen_params = {'model' : 'transforcer',
                  'prior' : 'prior_fair',
                  'start_point' : None,#'task_1713173398',
                  'max_len' : 60,
                  'batch_size' : 8,
                  'n_iter' : 10000,
                  'temperature' : 1.2,
                  'prior_div_penalty' : 0,
                  'lr' : 1e-3}

    gen_start(gen_params, task)
